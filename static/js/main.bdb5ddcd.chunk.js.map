{"version":3,"sources":["component/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","window","setInterval","setState","console","info","toUTCString","slice","prevProps","props","name","debug","clearInterval","className","Component","App","hasClock","clockName","getRandomName","value","now","toString","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,KAAM,IAAIC,OAC1BG,OAAOG,QAAQC,KAAK,EAAKT,MAAMC,KAAKS,cAAcC,OAAO,IAAK,MAC7D,OAXP,gCAcE,SAAmBC,GACbR,KAAKS,MAAMC,OAASF,EAAUE,MAChCT,OAAOG,QAAQO,MAAf,uBAAqCH,EAAUE,KAA/C,eAA0DV,KAAKS,MAAMC,SAhB3E,kCAoBE,WACEE,cAAcZ,KAAKD,WArBvB,oBAwBE,WACE,OACE,sBAAKc,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGb,KAAKS,MAAMC,OAGb,YAED,sBAAMG,UAAU,cAAhB,SACGb,KAAKJ,MAAMC,KAAKS,cAAcC,OAAO,IAAK,YAlCrD,GAA2BO,aCDdC,EAAb,4MACEnB,MAAQ,CACNoB,UAAU,EACVC,UAAW,WAHf,EAMElB,QAAU,EANZ,EA6BEmB,cAAgB,WACd,IAAMC,EAAQrB,KAAKsB,MAAMC,WAAWd,OAAO,GAE3C,MAAM,SAAN,OAAgBY,IAhCpB,uDAQE,WAAqB,IAAD,OAClBnB,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEc,UAAW,EAAKC,oBAC/B,MAEHI,SAASC,iBAAiB,eAAe,SAACC,GACxC,IAAQR,EAAa,EAAKpB,MAAlBoB,SAERQ,EAAMC,iBACN,EAAKtB,SAAS,CAAEa,UAAWA,SAjBjC,kCAyBE,WACEJ,cAAcZ,KAAKD,WA1BvB,oBAmCE,WACE,MAAgCC,KAAKJ,MAA7BoB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKJ,UAAU,MAAf,UACE,6CACCG,GAAY,cAAC,EAAD,CAAON,KAAMO,WAzClC,GAAyBH,aCNzBY,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.bdb5ddcd.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  date: Date,\n};\n\ntype Props = {\n  name: string,\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ date: new Date() });\n      window.console.info(this.state.date.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.name !== prevProps.name) {\n      window.console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.date.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './component/Clock';\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 1;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: this.getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', (event) => {\n      const { hasClock } = this.state;\n\n      event.preventDefault();\n      this.setState({ hasClock: !hasClock });\n    });\n  }\n\n  // componentDidUpdate(prevProps: State, prevState: State) {\n  //   window.console.debug(`Renamed from ${prevState.clockName} to ${this.state.clockName}`);\n  // }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  getRandomName = (): string => {\n    const value = Date.now().toString().slice(-4);\n\n    return `Clock-${value}`;\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}